ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART1_UART_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_USART1_UART_Init:
  24              	.LFB65:
  25              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * @attention
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/usart.c   ****   * All rights reserved.</center></h2>
  11:Src/usart.c   ****   *
  12:Src/usart.c   ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/usart.c   ****   * the "License"; You may not use this file except in compliance with the
  14:Src/usart.c   ****   * License. You may obtain a copy of the License at:
  15:Src/usart.c   ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** 
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** #ifdef __GNUC__
  25:Src/usart.c   **** /* With GCC, small printf (option LD Linker->Libraries->Small printf
  26:Src/usart.c   ****    set to 'Yes') calls __io_putchar() */
  27:Src/usart.c   **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  28:Src/usart.c   **** #else
  29:Src/usart.c   **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  30:Src/usart.c   **** #endif /* __GNUC__ */
  31:Src/usart.c   **** /* USER CODE END 0 */
  32:Src/usart.c   **** 
  33:Src/usart.c   **** UART_HandleTypeDef huart1;
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 2


  34:Src/usart.c   **** DMA_HandleTypeDef hdma_usart1_tx;
  35:Src/usart.c   **** 
  36:Src/usart.c   **** /* USART1 init function */
  37:Src/usart.c   **** 
  38:Src/usart.c   **** void MX_USART1_UART_Init(void)
  39:Src/usart.c   **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  40:Src/usart.c   **** 
  41:Src/usart.c   ****     huart1.Instance = USART1;
  35              		.loc 1 41 0
  36 0002 0A48     		ldr	r0, .L5
  37 0004 0A4B     		ldr	r3, .L5+4
  38 0006 0360     		str	r3, [r0]
  42:Src/usart.c   ****     huart1.Init.BaudRate = 115200;
  39              		.loc 1 42 0
  40 0008 4FF4E133 		mov	r3, #115200
  41 000c 4360     		str	r3, [r0, #4]
  43:Src/usart.c   ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
  42              		.loc 1 43 0
  43 000e 0023     		movs	r3, #0
  44 0010 8360     		str	r3, [r0, #8]
  44:Src/usart.c   ****     huart1.Init.StopBits = UART_STOPBITS_1;
  45              		.loc 1 44 0
  46 0012 C360     		str	r3, [r0, #12]
  45:Src/usart.c   ****     huart1.Init.Parity = UART_PARITY_NONE;
  47              		.loc 1 45 0
  48 0014 0361     		str	r3, [r0, #16]
  46:Src/usart.c   ****     huart1.Init.Mode = UART_MODE_TX_RX;
  49              		.loc 1 46 0
  50 0016 0C22     		movs	r2, #12
  51 0018 4261     		str	r2, [r0, #20]
  47:Src/usart.c   ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  52              		.loc 1 47 0
  53 001a 8361     		str	r3, [r0, #24]
  48:Src/usart.c   ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  54              		.loc 1 48 0
  55 001c C361     		str	r3, [r0, #28]
  49:Src/usart.c   ****     if (HAL_UART_Init(&huart1) != HAL_OK)
  56              		.loc 1 49 0
  57 001e FFF7FEFF 		bl	HAL_UART_Init
  58              	.LVL0:
  59 0022 00B9     		cbnz	r0, .L4
  60              	.L1:
  50:Src/usart.c   ****     {
  51:Src/usart.c   ****         Error_Handler();
  52:Src/usart.c   ****     }
  53:Src/usart.c   **** }
  61              		.loc 1 53 0
  62 0024 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 3


  63              	.L4:
  51:Src/usart.c   ****     }
  64              		.loc 1 51 0
  65 0026 FFF7FEFF 		bl	Error_Handler
  66              	.LVL1:
  67              		.loc 1 53 0
  68 002a FBE7     		b	.L1
  69              	.L6:
  70              		.align	2
  71              	.L5:
  72 002c 00000000 		.word	huart1
  73 0030 00380140 		.word	1073821696
  74              		.cfi_endproc
  75              	.LFE65:
  77              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  78              		.align	1
  79              		.global	HAL_UART_MspInit
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	HAL_UART_MspInit:
  86              	.LFB66:
  54:Src/usart.c   **** 
  55:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef *uartHandle)
  56:Src/usart.c   **** {
  87              		.loc 1 56 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 24
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL2:
  92 0000 70B5     		push	{r4, r5, r6, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 16
  95              		.cfi_offset 4, -16
  96              		.cfi_offset 5, -12
  97              		.cfi_offset 6, -8
  98              		.cfi_offset 14, -4
  99 0002 86B0     		sub	sp, sp, #24
 100              	.LCFI2:
 101              		.cfi_def_cfa_offset 40
  57:Src/usart.c   **** 
  58:Src/usart.c   ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
 102              		.loc 1 58 0
 103 0004 0023     		movs	r3, #0
 104 0006 0293     		str	r3, [sp, #8]
 105 0008 0393     		str	r3, [sp, #12]
 106 000a 0493     		str	r3, [sp, #16]
 107 000c 0593     		str	r3, [sp, #20]
  59:Src/usart.c   ****     if (uartHandle->Instance == USART1)
 108              		.loc 1 59 0
 109 000e 0268     		ldr	r2, [r0]
 110 0010 224B     		ldr	r3, .L13
 111 0012 9A42     		cmp	r2, r3
 112 0014 01D0     		beq	.L11
 113              	.LVL3:
 114              	.L7:
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 4


  60:Src/usart.c   ****     {
  61:Src/usart.c   ****         /* USER CODE BEGIN USART1_MspInit 0 */
  62:Src/usart.c   **** 
  63:Src/usart.c   ****         /* USER CODE END USART1_MspInit 0 */
  64:Src/usart.c   ****         /* USART1 clock enable */
  65:Src/usart.c   ****         __HAL_RCC_USART1_CLK_ENABLE();
  66:Src/usart.c   **** 
  67:Src/usart.c   ****         __HAL_RCC_GPIOA_CLK_ENABLE();
  68:Src/usart.c   ****         /**USART1 GPIO Configuration    
  69:Src/usart.c   ****     PA9     ------> USART1_TX
  70:Src/usart.c   ****     PA10     ------> USART1_RX 
  71:Src/usart.c   ****     */
  72:Src/usart.c   ****         GPIO_InitStruct.Pin = GPIO_PIN_9;
  73:Src/usart.c   ****         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  74:Src/usart.c   ****         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  75:Src/usart.c   ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  76:Src/usart.c   **** 
  77:Src/usart.c   ****         GPIO_InitStruct.Pin = GPIO_PIN_10;
  78:Src/usart.c   ****         GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  79:Src/usart.c   ****         GPIO_InitStruct.Pull = GPIO_NOPULL;
  80:Src/usart.c   ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  81:Src/usart.c   **** 
  82:Src/usart.c   ****         /* USART1 DMA Init */
  83:Src/usart.c   ****         /* USART1_TX Init */
  84:Src/usart.c   ****         hdma_usart1_tx.Instance = DMA1_Channel4;
  85:Src/usart.c   ****         hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
  86:Src/usart.c   ****         hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
  87:Src/usart.c   ****         hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
  88:Src/usart.c   ****         hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  89:Src/usart.c   ****         hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
  90:Src/usart.c   ****         hdma_usart1_tx.Init.Mode = DMA_NORMAL;
  91:Src/usart.c   ****         hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
  92:Src/usart.c   ****         if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
  93:Src/usart.c   ****         {
  94:Src/usart.c   ****             Error_Handler();
  95:Src/usart.c   ****         }
  96:Src/usart.c   **** 
  97:Src/usart.c   ****         __HAL_LINKDMA(uartHandle, hdmatx, hdma_usart1_tx);
  98:Src/usart.c   **** 
  99:Src/usart.c   ****         /* USER CODE BEGIN USART1_MspInit 1 */
 100:Src/usart.c   **** 
 101:Src/usart.c   ****         /* USER CODE END USART1_MspInit 1 */
 102:Src/usart.c   ****     }
 103:Src/usart.c   **** }
 115              		.loc 1 103 0
 116 0016 06B0     		add	sp, sp, #24
 117              	.LCFI3:
 118              		.cfi_remember_state
 119              		.cfi_def_cfa_offset 16
 120              		@ sp needed
 121 0018 70BD     		pop	{r4, r5, r6, pc}
 122              	.LVL4:
 123              	.L11:
 124              	.LCFI4:
 125              		.cfi_restore_state
 126 001a 0446     		mov	r4, r0
 127              	.LBB2:
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 5


  65:Src/usart.c   **** 
 128              		.loc 1 65 0
 129 001c 03F55843 		add	r3, r3, #55296
 130 0020 9A69     		ldr	r2, [r3, #24]
 131 0022 42F48042 		orr	r2, r2, #16384
 132 0026 9A61     		str	r2, [r3, #24]
 133 0028 9A69     		ldr	r2, [r3, #24]
 134 002a 02F48042 		and	r2, r2, #16384
 135 002e 0092     		str	r2, [sp]
 136 0030 009A     		ldr	r2, [sp]
 137              	.LBE2:
 138              	.LBB3:
  67:Src/usart.c   ****         /**USART1 GPIO Configuration    
 139              		.loc 1 67 0
 140 0032 9A69     		ldr	r2, [r3, #24]
 141 0034 42F00402 		orr	r2, r2, #4
 142 0038 9A61     		str	r2, [r3, #24]
 143 003a 9B69     		ldr	r3, [r3, #24]
 144 003c 03F00403 		and	r3, r3, #4
 145 0040 0193     		str	r3, [sp, #4]
 146 0042 019B     		ldr	r3, [sp, #4]
 147              	.LBE3:
  72:Src/usart.c   ****         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 148              		.loc 1 72 0
 149 0044 4FF40073 		mov	r3, #512
 150 0048 0293     		str	r3, [sp, #8]
  73:Src/usart.c   ****         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 151              		.loc 1 73 0
 152 004a 0223     		movs	r3, #2
 153 004c 0393     		str	r3, [sp, #12]
  74:Src/usart.c   ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 154              		.loc 1 74 0
 155 004e 0323     		movs	r3, #3
 156 0050 0593     		str	r3, [sp, #20]
  75:Src/usart.c   **** 
 157              		.loc 1 75 0
 158 0052 134E     		ldr	r6, .L13+4
 159 0054 02A9     		add	r1, sp, #8
 160 0056 3046     		mov	r0, r6
 161              	.LVL5:
 162 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 163              	.LVL6:
  77:Src/usart.c   ****         GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 164              		.loc 1 77 0
 165 005c 4FF48063 		mov	r3, #1024
 166 0060 0293     		str	r3, [sp, #8]
  78:Src/usart.c   ****         GPIO_InitStruct.Pull = GPIO_NOPULL;
 167              		.loc 1 78 0
 168 0062 0025     		movs	r5, #0
 169 0064 0395     		str	r5, [sp, #12]
  79:Src/usart.c   ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 170              		.loc 1 79 0
 171 0066 0495     		str	r5, [sp, #16]
  80:Src/usart.c   **** 
 172              		.loc 1 80 0
 173 0068 02A9     		add	r1, sp, #8
 174 006a 3046     		mov	r0, r6
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 6


 175 006c FFF7FEFF 		bl	HAL_GPIO_Init
 176              	.LVL7:
  84:Src/usart.c   ****         hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 177              		.loc 1 84 0
 178 0070 0C48     		ldr	r0, .L13+8
 179 0072 0D4B     		ldr	r3, .L13+12
 180 0074 0360     		str	r3, [r0]
  85:Src/usart.c   ****         hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 181              		.loc 1 85 0
 182 0076 1023     		movs	r3, #16
 183 0078 4360     		str	r3, [r0, #4]
  86:Src/usart.c   ****         hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 184              		.loc 1 86 0
 185 007a 8560     		str	r5, [r0, #8]
  87:Src/usart.c   ****         hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 186              		.loc 1 87 0
 187 007c 8023     		movs	r3, #128
 188 007e C360     		str	r3, [r0, #12]
  88:Src/usart.c   ****         hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 189              		.loc 1 88 0
 190 0080 0561     		str	r5, [r0, #16]
  89:Src/usart.c   ****         hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 191              		.loc 1 89 0
 192 0082 4561     		str	r5, [r0, #20]
  90:Src/usart.c   ****         hdma_usart1_tx.Init.Priority = DMA_PRIORITY_LOW;
 193              		.loc 1 90 0
 194 0084 8561     		str	r5, [r0, #24]
  91:Src/usart.c   ****         if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 195              		.loc 1 91 0
 196 0086 C561     		str	r5, [r0, #28]
  92:Src/usart.c   ****         {
 197              		.loc 1 92 0
 198 0088 FFF7FEFF 		bl	HAL_DMA_Init
 199              	.LVL8:
 200 008c 18B9     		cbnz	r0, .L12
 201              	.L9:
  97:Src/usart.c   **** 
 202              		.loc 1 97 0
 203 008e 054B     		ldr	r3, .L13+8
 204 0090 2363     		str	r3, [r4, #48]
 205 0092 5C62     		str	r4, [r3, #36]
 206              		.loc 1 103 0
 207 0094 BFE7     		b	.L7
 208              	.L12:
  94:Src/usart.c   ****         }
 209              		.loc 1 94 0
 210 0096 FFF7FEFF 		bl	Error_Handler
 211              	.LVL9:
 212 009a F8E7     		b	.L9
 213              	.L14:
 214              		.align	2
 215              	.L13:
 216 009c 00380140 		.word	1073821696
 217 00a0 00080140 		.word	1073809408
 218 00a4 00000000 		.word	hdma_usart1_tx
 219 00a8 44000240 		.word	1073872964
 220              		.cfi_endproc
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 7


 221              	.LFE66:
 223              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 224              		.align	1
 225              		.global	HAL_UART_MspDeInit
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu softvfp
 231              	HAL_UART_MspDeInit:
 232              	.LFB67:
 104:Src/usart.c   **** 
 105:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef *uartHandle)
 106:Src/usart.c   **** {
 233              		.loc 1 106 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              	.LVL10:
 107:Src/usart.c   **** 
 108:Src/usart.c   ****     if (uartHandle->Instance == USART1)
 238              		.loc 1 108 0
 239 0000 0268     		ldr	r2, [r0]
 240 0002 0A4B     		ldr	r3, .L22
 241 0004 9A42     		cmp	r2, r3
 242 0006 00D0     		beq	.L21
 243 0008 7047     		bx	lr
 244              	.L21:
 106:Src/usart.c   **** 
 245              		.loc 1 106 0
 246 000a 10B5     		push	{r4, lr}
 247              	.LCFI5:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
 251 000c 0446     		mov	r4, r0
 109:Src/usart.c   ****     {
 110:Src/usart.c   ****         /* USER CODE BEGIN USART1_MspDeInit 0 */
 111:Src/usart.c   **** 
 112:Src/usart.c   ****         /* USER CODE END USART1_MspDeInit 0 */
 113:Src/usart.c   ****         /* Peripheral clock disable */
 114:Src/usart.c   ****         __HAL_RCC_USART1_CLK_DISABLE();
 252              		.loc 1 114 0
 253 000e 084A     		ldr	r2, .L22+4
 254 0010 9369     		ldr	r3, [r2, #24]
 255 0012 23F48043 		bic	r3, r3, #16384
 256 0016 9361     		str	r3, [r2, #24]
 115:Src/usart.c   **** 
 116:Src/usart.c   ****         /**USART1 GPIO Configuration    
 117:Src/usart.c   ****     PA9     ------> USART1_TX
 118:Src/usart.c   ****     PA10     ------> USART1_RX 
 119:Src/usart.c   ****     */
 120:Src/usart.c   ****         HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9 | GPIO_PIN_10);
 257              		.loc 1 120 0
 258 0018 4FF4C061 		mov	r1, #1536
 259 001c 0548     		ldr	r0, .L22+8
 260              	.LVL11:
 261 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 8


 262              	.LVL12:
 121:Src/usart.c   **** 
 122:Src/usart.c   ****         /* USART1 DMA DeInit */
 123:Src/usart.c   ****         HAL_DMA_DeInit(uartHandle->hdmatx);
 263              		.loc 1 123 0
 264 0022 206B     		ldr	r0, [r4, #48]
 265 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 266              	.LVL13:
 124:Src/usart.c   ****         /* USER CODE BEGIN USART1_MspDeInit 1 */
 125:Src/usart.c   **** 
 126:Src/usart.c   ****         /* USER CODE END USART1_MspDeInit 1 */
 127:Src/usart.c   ****     }
 128:Src/usart.c   **** }
 267              		.loc 1 128 0
 268 0028 10BD     		pop	{r4, pc}
 269              	.LVL14:
 270              	.L23:
 271 002a 00BF     		.align	2
 272              	.L22:
 273 002c 00380140 		.word	1073821696
 274 0030 00100240 		.word	1073876992
 275 0034 00080140 		.word	1073809408
 276              		.cfi_endproc
 277              	.LFE67:
 279              		.section	.text.__io_putchar,"ax",%progbits
 280              		.align	1
 281              		.global	__io_putchar
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu softvfp
 287              	__io_putchar:
 288              	.LFB68:
 129:Src/usart.c   **** 
 130:Src/usart.c   **** /* USER CODE BEGIN 1 */
 131:Src/usart.c   **** PUTCHAR_PROTOTYPE
 132:Src/usart.c   **** {
 289              		.loc 1 132 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 8
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              	.LVL15:
 294 0000 00B5     		push	{lr}
 295              	.LCFI6:
 296              		.cfi_def_cfa_offset 4
 297              		.cfi_offset 14, -4
 298 0002 83B0     		sub	sp, sp, #12
 299              	.LCFI7:
 300              		.cfi_def_cfa_offset 16
 301 0004 02A9     		add	r1, sp, #8
 302 0006 41F8040D 		str	r0, [r1, #-4]!
 133:Src/usart.c   ****     /* Place your implementation of fputc here */
 134:Src/usart.c   ****     /* e.g. write a character to the USART1 and Loop until the end of transmission */
 135:Src/usart.c   ****     HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xffff);
 303              		.loc 1 135 0
 304 000a 4FF6FF73 		movw	r3, #65535
 305 000e 0122     		movs	r2, #1
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 9


 306 0010 0348     		ldr	r0, .L26
 307              	.LVL16:
 308 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 309              	.LVL17:
 136:Src/usart.c   **** 
 137:Src/usart.c   ****     return ch;
 138:Src/usart.c   **** }
 310              		.loc 1 138 0
 311 0016 0198     		ldr	r0, [sp, #4]
 312 0018 03B0     		add	sp, sp, #12
 313              	.LCFI8:
 314              		.cfi_def_cfa_offset 4
 315              		@ sp needed
 316 001a 5DF804FB 		ldr	pc, [sp], #4
 317              	.L27:
 318 001e 00BF     		.align	2
 319              	.L26:
 320 0020 00000000 		.word	huart1
 321              		.cfi_endproc
 322              	.LFE68:
 324              		.section	.text._write,"ax",%progbits
 325              		.align	1
 326              		.weak	_write
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu softvfp
 332              	_write:
 333              	.LFB69:
 139:Src/usart.c   **** 
 140:Src/usart.c   **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 141:Src/usart.c   **** {
 334              		.loc 1 141 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              	.LVL18:
 339 0000 70B5     		push	{r4, r5, r6, lr}
 340              	.LCFI9:
 341              		.cfi_def_cfa_offset 16
 342              		.cfi_offset 4, -16
 343              		.cfi_offset 5, -12
 344              		.cfi_offset 6, -8
 345              		.cfi_offset 14, -4
 346 0002 1646     		mov	r6, r2
 347              	.LVL19:
 142:Src/usart.c   ****     int DataIdx;
 143:Src/usart.c   **** 
 144:Src/usart.c   ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 348              		.loc 1 144 0
 349 0004 0024     		movs	r4, #0
 350 0006 05E0     		b	.L29
 351              	.LVL20:
 352              	.L30:
 145:Src/usart.c   ****     {
 146:Src/usart.c   ****         __io_putchar(*ptr++);
 353              		.loc 1 146 0 discriminator 3
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 10


 354 0008 4D1C     		adds	r5, r1, #1
 355              	.LVL21:
 356 000a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 357 000c FFF7FEFF 		bl	__io_putchar
 358              	.LVL22:
 144:Src/usart.c   ****     {
 359              		.loc 1 144 0 discriminator 3
 360 0010 0134     		adds	r4, r4, #1
 361              	.LVL23:
 362              		.loc 1 146 0 discriminator 3
 363 0012 2946     		mov	r1, r5
 364              	.LVL24:
 365              	.L29:
 144:Src/usart.c   ****     {
 366              		.loc 1 144 0 discriminator 1
 367 0014 B442     		cmp	r4, r6
 368 0016 F7DB     		blt	.L30
 147:Src/usart.c   ****     }
 148:Src/usart.c   ****     return len;
 149:Src/usart.c   **** }
 369              		.loc 1 149 0
 370 0018 3046     		mov	r0, r6
 371 001a 70BD     		pop	{r4, r5, r6, pc}
 372              		.cfi_endproc
 373              	.LFE69:
 375              		.comm	hdma_usart1_tx,68,4
 376              		.comm	huart1,64,4
 377              		.text
 378              	.Letext0:
 379              		.file 2 "d:\\gcc-arm-none-eabi-8-2018-q4-major-win32\\arm-none-eabi\\include\\machine\\_default_ty
 380              		.file 3 "d:\\gcc-arm-none-eabi-8-2018-q4-major-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 381              		.file 4 "C:/Users/Thee/STM32Cube/Repository/STM32Cube_FW_F1_V1.8.0/Drivers/CMSIS/Include/core_cm3.
 382              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 383              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 384              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 385              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 386              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 387              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 388              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 389              		.file 12 "Inc/usart.h"
 390              		.file 13 "Inc/main.h"
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:16     .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:23     .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:72     .text.MX_USART1_UART_Init:0000002c $d
                            *COM*:00000040 huart1
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:78     .text.HAL_UART_MspInit:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:85     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:216    .text.HAL_UART_MspInit:0000009c $d
                            *COM*:00000044 hdma_usart1_tx
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:224    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:231    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:273    .text.HAL_UART_MspDeInit:0000002c $d
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:280    .text.__io_putchar:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:287    .text.__io_putchar:00000000 __io_putchar
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:320    .text.__io_putchar:00000020 $d
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:325    .text._write:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccss1RMm.s:332    .text._write:00000000 _write

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_UART_Transmit
