ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART1_UART_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_USART1_UART_Init:
  24              	.LFB65:
  25              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * @attention
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/usart.c   ****   * All rights reserved.</center></h2>
  11:Src/usart.c   ****   *
  12:Src/usart.c   ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/usart.c   ****   * the "License"; You may not use this file except in compliance with the
  14:Src/usart.c   ****   * License. You may obtain a copy of the License at:
  15:Src/usart.c   ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** 
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** #ifdef __GNUC__
  25:Src/usart.c   **** /* With GCC, small printf (option LD Linker->Libraries->Small printf
  26:Src/usart.c   ****    set to 'Yes') calls __io_putchar() */
  27:Src/usart.c   **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  28:Src/usart.c   **** #else
  29:Src/usart.c   **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  30:Src/usart.c   **** #endif /* __GNUC__ */
  31:Src/usart.c   **** /* USER CODE END 0 */
  32:Src/usart.c   **** 
  33:Src/usart.c   **** UART_HandleTypeDef huart1;
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 2


  34:Src/usart.c   **** 
  35:Src/usart.c   **** /* USART1 init function */
  36:Src/usart.c   **** 
  37:Src/usart.c   **** void MX_USART1_UART_Init(void)
  38:Src/usart.c   **** {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  39:Src/usart.c   **** 
  40:Src/usart.c   ****   huart1.Instance = USART1;
  35              		.loc 1 40 0
  36 0002 0A48     		ldr	r0, .L5
  37 0004 0A4B     		ldr	r3, .L5+4
  38 0006 0360     		str	r3, [r0]
  41:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  39              		.loc 1 41 0
  40 0008 4FF4E133 		mov	r3, #115200
  41 000c 4360     		str	r3, [r0, #4]
  42:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  42              		.loc 1 42 0
  43 000e 0023     		movs	r3, #0
  44 0010 8360     		str	r3, [r0, #8]
  43:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  45              		.loc 1 43 0
  46 0012 C360     		str	r3, [r0, #12]
  44:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  47              		.loc 1 44 0
  48 0014 0361     		str	r3, [r0, #16]
  45:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  49              		.loc 1 45 0
  50 0016 0C22     		movs	r2, #12
  51 0018 4261     		str	r2, [r0, #20]
  46:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  52              		.loc 1 46 0
  53 001a 8361     		str	r3, [r0, #24]
  47:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  54              		.loc 1 47 0
  55 001c C361     		str	r3, [r0, #28]
  48:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  56              		.loc 1 48 0
  57 001e FFF7FEFF 		bl	HAL_UART_Init
  58              	.LVL0:
  59 0022 00B9     		cbnz	r0, .L4
  60              	.L1:
  49:Src/usart.c   ****   {
  50:Src/usart.c   ****     Error_Handler();
  51:Src/usart.c   ****   }
  52:Src/usart.c   **** 
  53:Src/usart.c   **** }
  61              		.loc 1 53 0
  62 0024 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 3


  63              	.L4:
  50:Src/usart.c   ****   }
  64              		.loc 1 50 0
  65 0026 FFF7FEFF 		bl	Error_Handler
  66              	.LVL1:
  67              		.loc 1 53 0
  68 002a FBE7     		b	.L1
  69              	.L6:
  70              		.align	2
  71              	.L5:
  72 002c 00000000 		.word	huart1
  73 0030 00380140 		.word	1073821696
  74              		.cfi_endproc
  75              	.LFE65:
  77              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  78              		.align	1
  79              		.global	HAL_UART_MspInit
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  83              		.fpu softvfp
  85              	HAL_UART_MspInit:
  86              	.LFB66:
  54:Src/usart.c   **** 
  55:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  56:Src/usart.c   **** {
  87              		.loc 1 56 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 24
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL2:
  92 0000 30B5     		push	{r4, r5, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 12
  95              		.cfi_offset 4, -12
  96              		.cfi_offset 5, -8
  97              		.cfi_offset 14, -4
  98 0002 87B0     		sub	sp, sp, #28
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 40
  57:Src/usart.c   **** 
  58:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 101              		.loc 1 58 0
 102 0004 0023     		movs	r3, #0
 103 0006 0293     		str	r3, [sp, #8]
 104 0008 0393     		str	r3, [sp, #12]
 105 000a 0493     		str	r3, [sp, #16]
 106 000c 0593     		str	r3, [sp, #20]
  59:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 107              		.loc 1 59 0
 108 000e 0268     		ldr	r2, [r0]
 109 0010 1B4B     		ldr	r3, .L11
 110 0012 9A42     		cmp	r2, r3
 111 0014 01D0     		beq	.L10
 112              	.LVL3:
 113              	.L7:
  60:Src/usart.c   ****   {
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 4


  61:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  62:Src/usart.c   **** 
  63:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
  64:Src/usart.c   ****     /* USART1 clock enable */
  65:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
  66:Src/usart.c   ****   
  67:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  68:Src/usart.c   ****     /**USART1 GPIO Configuration    
  69:Src/usart.c   ****     PA9     ------> USART1_TX
  70:Src/usart.c   ****     PA10     ------> USART1_RX 
  71:Src/usart.c   ****     */
  72:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
  73:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  74:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  75:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  76:Src/usart.c   **** 
  77:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
  78:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  79:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  80:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  81:Src/usart.c   **** 
  82:Src/usart.c   ****     /* USART1 interrupt Init */
  83:Src/usart.c   ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 1);
  84:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
  85:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
  86:Src/usart.c   **** 
  87:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
  88:Src/usart.c   ****   }
  89:Src/usart.c   **** }
 114              		.loc 1 89 0
 115 0016 07B0     		add	sp, sp, #28
 116              	.LCFI3:
 117              		.cfi_remember_state
 118              		.cfi_def_cfa_offset 12
 119              		@ sp needed
 120 0018 30BD     		pop	{r4, r5, pc}
 121              	.LVL4:
 122              	.L10:
 123              	.LCFI4:
 124              		.cfi_restore_state
 125              	.LBB2:
  65:Src/usart.c   ****   
 126              		.loc 1 65 0
 127 001a 03F55843 		add	r3, r3, #55296
 128 001e 9A69     		ldr	r2, [r3, #24]
 129 0020 42F48042 		orr	r2, r2, #16384
 130 0024 9A61     		str	r2, [r3, #24]
 131 0026 9A69     		ldr	r2, [r3, #24]
 132 0028 02F48042 		and	r2, r2, #16384
 133 002c 0092     		str	r2, [sp]
 134 002e 009A     		ldr	r2, [sp]
 135              	.LBE2:
 136              	.LBB3:
  67:Src/usart.c   ****     /**USART1 GPIO Configuration    
 137              		.loc 1 67 0
 138 0030 9A69     		ldr	r2, [r3, #24]
 139 0032 42F00402 		orr	r2, r2, #4
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 5


 140 0036 9A61     		str	r2, [r3, #24]
 141 0038 9B69     		ldr	r3, [r3, #24]
 142 003a 03F00403 		and	r3, r3, #4
 143 003e 0193     		str	r3, [sp, #4]
 144 0040 019B     		ldr	r3, [sp, #4]
 145              	.LBE3:
  72:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 146              		.loc 1 72 0
 147 0042 4FF40073 		mov	r3, #512
 148 0046 0293     		str	r3, [sp, #8]
  73:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 149              		.loc 1 73 0
 150 0048 0223     		movs	r3, #2
 151 004a 0393     		str	r3, [sp, #12]
  74:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 152              		.loc 1 74 0
 153 004c 0323     		movs	r3, #3
 154 004e 0593     		str	r3, [sp, #20]
  75:Src/usart.c   **** 
 155              		.loc 1 75 0
 156 0050 0C4D     		ldr	r5, .L11+4
 157 0052 02A9     		add	r1, sp, #8
 158 0054 2846     		mov	r0, r5
 159              	.LVL5:
 160 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL6:
  77:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 162              		.loc 1 77 0
 163 005a 4FF48063 		mov	r3, #1024
 164 005e 0293     		str	r3, [sp, #8]
  78:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 165              		.loc 1 78 0
 166 0060 0024     		movs	r4, #0
 167 0062 0394     		str	r4, [sp, #12]
  79:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 168              		.loc 1 79 0
 169 0064 0494     		str	r4, [sp, #16]
  80:Src/usart.c   **** 
 170              		.loc 1 80 0
 171 0066 02A9     		add	r1, sp, #8
 172 0068 2846     		mov	r0, r5
 173 006a FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL7:
  83:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 175              		.loc 1 83 0
 176 006e 0122     		movs	r2, #1
 177 0070 2146     		mov	r1, r4
 178 0072 2520     		movs	r0, #37
 179 0074 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 180              	.LVL8:
  84:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 181              		.loc 1 84 0
 182 0078 2520     		movs	r0, #37
 183 007a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 184              	.LVL9:
 185              		.loc 1 89 0
 186 007e CAE7     		b	.L7
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 6


 187              	.L12:
 188              		.align	2
 189              	.L11:
 190 0080 00380140 		.word	1073821696
 191 0084 00080140 		.word	1073809408
 192              		.cfi_endproc
 193              	.LFE66:
 195              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 196              		.align	1
 197              		.global	HAL_UART_MspDeInit
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu softvfp
 203              	HAL_UART_MspDeInit:
 204              	.LFB67:
  90:Src/usart.c   **** 
  91:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  92:Src/usart.c   **** {
 205              		.loc 1 92 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              	.LVL10:
 210 0000 08B5     		push	{r3, lr}
 211              	.LCFI5:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 3, -8
 214              		.cfi_offset 14, -4
  93:Src/usart.c   **** 
  94:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 215              		.loc 1 94 0
 216 0002 0268     		ldr	r2, [r0]
 217 0004 084B     		ldr	r3, .L17
 218 0006 9A42     		cmp	r2, r3
 219 0008 00D0     		beq	.L16
 220              	.LVL11:
 221              	.L13:
  95:Src/usart.c   ****   {
  96:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
  97:Src/usart.c   **** 
  98:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
  99:Src/usart.c   ****     /* Peripheral clock disable */
 100:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 101:Src/usart.c   ****   
 102:Src/usart.c   ****     /**USART1 GPIO Configuration    
 103:Src/usart.c   ****     PA9     ------> USART1_TX
 104:Src/usart.c   ****     PA10     ------> USART1_RX 
 105:Src/usart.c   ****     */
 106:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 107:Src/usart.c   **** 
 108:Src/usart.c   ****     /* USART1 interrupt Deinit */
 109:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 110:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 111:Src/usart.c   **** 
 112:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 113:Src/usart.c   ****   }
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 7


 114:Src/usart.c   **** } 
 222              		.loc 1 114 0
 223 000a 08BD     		pop	{r3, pc}
 224              	.LVL12:
 225              	.L16:
 100:Src/usart.c   ****   
 226              		.loc 1 100 0
 227 000c 074A     		ldr	r2, .L17+4
 228 000e 9369     		ldr	r3, [r2, #24]
 229 0010 23F48043 		bic	r3, r3, #16384
 230 0014 9361     		str	r3, [r2, #24]
 106:Src/usart.c   **** 
 231              		.loc 1 106 0
 232 0016 4FF4C061 		mov	r1, #1536
 233 001a 0548     		ldr	r0, .L17+8
 234              	.LVL13:
 235 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 236              	.LVL14:
 109:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 237              		.loc 1 109 0
 238 0020 2520     		movs	r0, #37
 239 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 240              	.LVL15:
 241              		.loc 1 114 0
 242 0026 F0E7     		b	.L13
 243              	.L18:
 244              		.align	2
 245              	.L17:
 246 0028 00380140 		.word	1073821696
 247 002c 00100240 		.word	1073876992
 248 0030 00080140 		.word	1073809408
 249              		.cfi_endproc
 250              	.LFE67:
 252              		.section	.text.Usart_SendString,"ax",%progbits
 253              		.align	1
 254              		.global	Usart_SendString
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu softvfp
 260              	Usart_SendString:
 261              	.LFB68:
 115:Src/usart.c   **** 
 116:Src/usart.c   **** /* USER CODE BEGIN 1 */
 117:Src/usart.c   **** void Usart_SendString(uint8_t *str)
 118:Src/usart.c   **** {
 262              		.loc 1 118 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              	.LVL16:
 267 0000 38B5     		push	{r3, r4, r5, lr}
 268              	.LCFI6:
 269              		.cfi_def_cfa_offset 16
 270              		.cfi_offset 3, -16
 271              		.cfi_offset 4, -12
 272              		.cfi_offset 5, -8
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 8


 273              		.cfi_offset 14, -4
 274 0002 0546     		mov	r5, r0
 275              	.LVL17:
 119:Src/usart.c   ****     unsigned int k = 0;
 276              		.loc 1 119 0
 277 0004 0024     		movs	r4, #0
 278              	.LVL18:
 279              	.L20:
 120:Src/usart.c   ****     do
 121:Src/usart.c   ****     {
 122:Src/usart.c   ****         HAL_UART_Transmit(&huart1, (uint8_t *)(str + k), 1, 1000);
 280              		.loc 1 122 0 discriminator 1
 281 0006 4FF47A73 		mov	r3, #1000
 282 000a 0122     		movs	r2, #1
 283 000c 2919     		adds	r1, r5, r4
 284 000e 0448     		ldr	r0, .L22
 285 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 286              	.LVL19:
 123:Src/usart.c   ****         k++;
 287              		.loc 1 123 0 discriminator 1
 288 0014 0134     		adds	r4, r4, #1
 289              	.LVL20:
 124:Src/usart.c   ****     } while (*(str + k) != '\0');
 290              		.loc 1 124 0 discriminator 1
 291 0016 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 292 0018 002B     		cmp	r3, #0
 293 001a F4D1     		bne	.L20
 125:Src/usart.c   **** }
 294              		.loc 1 125 0
 295 001c 38BD     		pop	{r3, r4, r5, pc}
 296              	.LVL21:
 297              	.L23:
 298 001e 00BF     		.align	2
 299              	.L22:
 300 0020 00000000 		.word	huart1
 301              		.cfi_endproc
 302              	.LFE68:
 304              		.section	.text.__io_putchar,"ax",%progbits
 305              		.align	1
 306              		.global	__io_putchar
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu softvfp
 312              	__io_putchar:
 313              	.LFB69:
 126:Src/usart.c   **** 
 127:Src/usart.c   **** PUTCHAR_PROTOTYPE
 128:Src/usart.c   **** {
 314              		.loc 1 128 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 8
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              	.LVL22:
 319 0000 00B5     		push	{lr}
 320              	.LCFI7:
 321              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 9


 322              		.cfi_offset 14, -4
 323 0002 83B0     		sub	sp, sp, #12
 324              	.LCFI8:
 325              		.cfi_def_cfa_offset 16
 326 0004 02A9     		add	r1, sp, #8
 327 0006 41F8040D 		str	r0, [r1, #-4]!
 129:Src/usart.c   ****     /* Place your implementation of fputc here */
 130:Src/usart.c   ****     /* e.g. write a character to the USART1 and Loop until the end of transmission */
 131:Src/usart.c   ****     HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xffff);
 328              		.loc 1 131 0
 329 000a 4FF6FF73 		movw	r3, #65535
 330 000e 0122     		movs	r2, #1
 331 0010 0348     		ldr	r0, .L26
 332              	.LVL23:
 333 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 334              	.LVL24:
 132:Src/usart.c   **** 
 133:Src/usart.c   ****     return ch;
 134:Src/usart.c   **** }
 335              		.loc 1 134 0
 336 0016 0198     		ldr	r0, [sp, #4]
 337 0018 03B0     		add	sp, sp, #12
 338              	.LCFI9:
 339              		.cfi_def_cfa_offset 4
 340              		@ sp needed
 341 001a 5DF804FB 		ldr	pc, [sp], #4
 342              	.L27:
 343 001e 00BF     		.align	2
 344              	.L26:
 345 0020 00000000 		.word	huart1
 346              		.cfi_endproc
 347              	.LFE69:
 349              		.section	.text._write,"ax",%progbits
 350              		.align	1
 351              		.weak	_write
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu softvfp
 357              	_write:
 358              	.LFB70:
 135:Src/usart.c   **** 
 136:Src/usart.c   **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 137:Src/usart.c   **** {
 359              		.loc 1 137 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              	.LVL25:
 364 0000 70B5     		push	{r4, r5, r6, lr}
 365              	.LCFI10:
 366              		.cfi_def_cfa_offset 16
 367              		.cfi_offset 4, -16
 368              		.cfi_offset 5, -12
 369              		.cfi_offset 6, -8
 370              		.cfi_offset 14, -4
 371 0002 1646     		mov	r6, r2
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 10


 372              	.LVL26:
 138:Src/usart.c   ****     int DataIdx;
 139:Src/usart.c   **** 
 140:Src/usart.c   ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 373              		.loc 1 140 0
 374 0004 0024     		movs	r4, #0
 375 0006 05E0     		b	.L29
 376              	.LVL27:
 377              	.L30:
 141:Src/usart.c   ****     {
 142:Src/usart.c   ****         __io_putchar(*ptr++);
 378              		.loc 1 142 0 discriminator 3
 379 0008 4D1C     		adds	r5, r1, #1
 380              	.LVL28:
 381 000a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 382 000c FFF7FEFF 		bl	__io_putchar
 383              	.LVL29:
 140:Src/usart.c   ****     {
 384              		.loc 1 140 0 discriminator 3
 385 0010 0134     		adds	r4, r4, #1
 386              	.LVL30:
 387              		.loc 1 142 0 discriminator 3
 388 0012 2946     		mov	r1, r5
 389              	.LVL31:
 390              	.L29:
 140:Src/usart.c   ****     {
 391              		.loc 1 140 0 discriminator 1
 392 0014 B442     		cmp	r4, r6
 393 0016 F7DB     		blt	.L30
 143:Src/usart.c   ****     }
 144:Src/usart.c   ****     return len;
 145:Src/usart.c   **** }
 394              		.loc 1 145 0
 395 0018 3046     		mov	r0, r6
 396 001a 70BD     		pop	{r4, r5, r6, pc}
 397              		.cfi_endproc
 398              	.LFE70:
 400              		.comm	huart1,64,4
 401              		.text
 402              	.Letext0:
 403              		.file 2 "d:\\gcc-arm-none-eabi-8-2018-q4-major-win32\\arm-none-eabi\\include\\machine\\_default_ty
 404              		.file 3 "d:\\gcc-arm-none-eabi-8-2018-q4-major-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 405              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 406              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 407              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 408              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 409              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 410              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 411              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 412              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 413              		.file 12 "Inc/usart.h"
 414              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 415              		.file 14 "Inc/main.h"
ARM GAS  C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:16     .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:23     .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:72     .text.MX_USART1_UART_Init:0000002c $d
                            *COM*:00000040 huart1
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:78     .text.HAL_UART_MspInit:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:85     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:190    .text.HAL_UART_MspInit:00000080 $d
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:196    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:203    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:246    .text.HAL_UART_MspDeInit:00000028 $d
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:253    .text.Usart_SendString:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:260    .text.Usart_SendString:00000000 Usart_SendString
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:300    .text.Usart_SendString:00000020 $d
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:305    .text.__io_putchar:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:312    .text.__io_putchar:00000000 __io_putchar
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:345    .text.__io_putchar:00000020 $d
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:350    .text._write:00000000 $t
C:\Users\Thee\AppData\Local\Temp\ccCs2IsQ.s:357    .text._write:00000000 _write

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
HAL_UART_Transmit
